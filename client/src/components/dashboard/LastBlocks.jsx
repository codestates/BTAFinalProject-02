import React, { useState, useEffect } from "react";
import { useQuery } from "react-query";
import { getBlockList } from "../../hooks/useAxios";
import {
  Box,
  Button,
  Card,
  CardContent,
  Link,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableRow,
  Typography,
} from "@mui/material";
import EngineeringIcon from "@mui/icons-material/Engineering";
import { BeddowsToLSK, timestampToDate } from "../../utils/conversion-utils";
import LoadingSpinner from "../common/LoadingSpinner";

const createCellData = (blockid, timestamp, generatorAddress, tempReward) => {
  const date = timestampToDate(new Date(timestamp));
  const reward = `${BeddowsToLSK(tempReward)} LSK`;
  return { blockid, date, generatorAddress, reward };
};

const LastBlocks = () => {
  const [rows, setRows] = useState([]);

  const { data, isLoading } = useQuery(["block-list", Number(1)], () =>
    getBlockList(Number(1))
  );

  useEffect(() => {
    const blockList = [];
    data?.data.blocks.forEach((block) => {
      blockList.push(
        createCellData(
          block.id,
          block.timestamp,
          block.generatorAddress,
          block.reward
        )
      );
    });

    setRows(blockList);
  }, [data]);

  if (isLoading) {
    return <LoadingSpinner />;
  }
  return (
    <>
      <Card sx={{ width: "100%", overflow: "hidden" }}>
        <CardContent>
          <Typography variant="h6" color="textSecondary">
            최근 생성된 블록
          </Typography>
          <TableContainer sx={{ mt: 1, maxHeight: 440 }}>
            <Table sx={{ minWidth: 650 }} aria-label="simple table">
              <TableBody>
                {rows &&
                  rows.map((row) => (
                    <TableRow
                      key={row.id}
                      sx={{ "&:last-child td, &:last-child th": { border: 0 } }}
                    >
                      <>
                        <TableCell component="th" scope="row">
                          <EngineeringIcon />
                        </TableCell>
                        <TableCell component="th" scope="row">
                          <Link
                            href={`/block/${row.blockid}`}
                            underline="hover"
                          >
                            {row.blockid.slice(0, 8)}...{row.blockid.slice(-7)}
                          </Link>
                          <br /> {row.date}
                        </TableCell>
                        <TableCell align="left">
                          generated by
                          <br />
                          <Link
                            href={`/account/${row.generatorAddress}`}
                            underline="hover"
                          >
                            {row.generatorAddress.slice(0, 8)}...
                            {row.generatorAddress.slice(-7)}
                          </Link>
                        </TableCell>
                        <TableCell align="right">{row.reward}</TableCell>
                      </>
                    </TableRow>
                  ))}
              </TableBody>
            </Table>
          </TableContainer>
          <Box sx={{ mt: 2, textAlign: "center" }}>
            <Button href="/transactions" variant="contained">
              트랜잭션 더 보기
            </Button>
          </Box>
        </CardContent>
      </Card>
    </>
  );
};

export default LastBlocks;

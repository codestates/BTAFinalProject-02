import React from "react";
import { Box, Button, Card, CardContent, Link, Table, TableBody, TableCell, TableContainer, TableRow, Typography } from "@mui/material";
import SyncAltIcon from '@mui/icons-material/SyncAlt';
import EngineeringIcon from '@mui/icons-material/Engineering';

const DashBoardCard = ({ title, text, rows }) => {
  return (
    <Card sx={{ width: "100%", overflow: "hidden" }}>
      <CardContent>
        <Typography variant="h6" color="textSecondary">
          {title}
        </Typography>
        {title === "최근 생성된 트랜잭션" || title === "최근 생성된 블록" ? (
          <>
            <TableContainer sx={{ mt: 1, maxHeight: 440  }}>
              <Table sx={{ minWidth: 650 }} aria-label="simple table">
                <TableBody>
                  {rows && rows.map((row) => (
                    <TableRow
                      key={row.id}
                      sx={{ '&:last-child td, &:last-child th': { border: 0 } }}
                    >
                      {title === "최근 생성된 트랜잭션" ? (
                        <>
                          <TableCell component="th" scope="row">
                            <SyncAltIcon />
                          </TableCell>
                          <TableCell component="th" scope="row">
                            <Link href={`/transaction/${row.id}`} underline="hover">
                              {row.id.slice(0, 8)}...{row.id.slice(-7)}
                            </Link>
                            <br /> {row.date} hours ago
                          </TableCell>
                          <TableCell align="left">
                            from : &nbsp;
                            <Link href={`/transaction/${row.recipient}`} underline="hover">
                              {row.recipient.slice(0, 8)}...{row.recipient.slice(-7)}
                            </Link>
                            <br />
                            to : &nbsp;
                            <Link href={`/transaction/${row.sender}`} underline="hover">
                              {row.sender.slice(0, 8)}...${row.sender.slice(-7)}
                            </Link>
                          </TableCell>
                          <TableCell align="right">
                            <span style={{ fontWeight: "bold" }}>{row.amount}</span> <br/> fee: {row.fee}
                          </TableCell>
                        </>
                      ) : (
                        <>
                          <TableCell component="th" scope="row">
                            <EngineeringIcon />
                          </TableCell>
                          <TableCell component="th" scope="row">
                            <Link href={`/block/${row.id}`} underline="hover">
                              {row.id.slice(0, 8)}...{row.id.slice(-7)}
                            </Link>
                            <br /> {row.date} hours ago
                          </TableCell>
                          <TableCell align="left">
                            generated by
                            <br />
                            <Link href={`/transaction/${row.generatedby}`} underline="hover">
                              {row.generatedby.slice(0, 8)}...{row.generatedby.slice(-7)}
                            </Link>
                          </TableCell>
                          <TableCell align="right">
                            1Ⱡ
                          </TableCell>
                        </>
                      )}
                    </TableRow>
                  ))}
                </TableBody>
              </Table>
            </TableContainer>
            <Box sx={{ mt: 2, textAlign: "center" }}>
              {title === "최근 생성된 트랜잭션" ?
                <Button href="/transactions" variant="contained">트랜잭션 더 보기</Button>
                :
                <Button href="/blocks" variant="contained">블록 더 보기</Button>
              }
            </Box>
          </>
        ) : (
          <Typography variant="h4" color="inherit">
            {text}
          </Typography>
        )}
      </CardContent>
    </Card>
  );
};

export default DashBoardCard;
